// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit 263b33e20d9304f44bf4d598dde892211c5c89e8).

#pragma once
#include "CoreMinimal.h"
#include "BSATN/UESpacetimeDB.h"
#include "ModuleBindings/Optionals/TestClientOptionalInt32.g.h"
#include "TestClientOptionalVecInt32.g.generated.h"

USTRUCT(BlueprintType)
struct TESTCLIENT_API FTestClientOptionalVecInt32
{
    GENERATED_BODY()

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    bool bHasValue = false;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB", meta = (EditCondition = "bHasValue"))
    TArray<FTestClientOptionalInt32> Value;

    FTestClientOptionalVecInt32() = default;

    explicit FTestClientOptionalVecInt32(const TArray<FTestClientOptionalInt32>& InValue)
        : bHasValue(true), Value(InValue) {}

    bool IsSet() const { return bHasValue; }
    void Reset() { bHasValue = false; }

    FORCEINLINE bool operator==(const FTestClientOptionalVecInt32& Other) const
    {
        if (bHasValue != Other.bHasValue) return false;
        return !bHasValue || Value == Other.Value;
    }

    FORCEINLINE bool operator!=(const FTestClientOptionalVecInt32& Other) const
    {
        return !(*this == Other);
    }
};

/**
 * Custom hash function for FTestClientOptionalVecInt32.
 * Hashes the HasValue flag and the Value if present.
 * @param Optional The FTestClientOptionalVecInt32 instance to hash.
 * @return The combined hash value.
 */
FORCEINLINE uint32 GetTypeHash(const FTestClientOptionalVecInt32& Optional)
{
    uint32 Hash = GetTypeHash(Optional.bHasValue);
    if (Optional.bHasValue)
    {
        Hash = HashCombine(Hash, GetTypeHash(Optional.Value));
    }
    return Hash;
}

namespace UE::SpacetimeDB
{
    UE_SPACETIMEDB_ENABLE_TARRAY(FTestClientOptionalVecInt32);

    UE_SPACETIMEDB_OPTIONAL(FTestClientOptionalVecInt32, bHasValue, Value);
}
