// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit aeeb35f0bbce28430aeeb22691976813dd469e1e).

#pragma once
#include "CoreMinimal.h"
#include "BSATN/UESpacetimeDB.h"
#include "Types/Builtins.h"
#include "PkU128Type.g.generated.h"

USTRUCT(BlueprintType)
struct TESTCLIENT_API FPkU128Type
{
    GENERATED_BODY()

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    FSpacetimeDBUInt128 N;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "SpacetimeDB")
    int32 Data;

    FORCEINLINE bool operator==(const FPkU128Type& Other) const
    {
        return N == Other.N && Data == Other.Data;
    }

    FORCEINLINE bool operator!=(const FPkU128Type& Other) const
    {
        return !(*this == Other);
    }
};

/**
 * Custom hash function for FPkU128Type.
 * Combines the hashes of all fields that are compared in operator==.
 * @param PkU128Type The FPkU128Type instance to hash.
 * @return The combined hash value.
 */
FORCEINLINE uint32 GetTypeHash(const FPkU128Type& PkU128Type)
{
    uint32 Hash = GetTypeHash(PkU128Type.N);
    Hash = HashCombine(Hash, GetTypeHash(PkU128Type.Data));
    return Hash;
}

namespace UE::SpacetimeDB
{
    UE_SPACETIMEDB_ENABLE_TARRAY(FPkU128Type);

    UE_SPACETIMEDB_STRUCT(FPkU128Type, N, Data);
}
