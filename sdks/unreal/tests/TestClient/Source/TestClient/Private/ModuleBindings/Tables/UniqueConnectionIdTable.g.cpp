// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit 263b33e20d9304f44bf4d598dde892211c5c89e8).

#include "ModuleBindings/Tables/UniqueConnectionIdTable.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UUniqueConnectionIdTable::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FUniqueConnectionIdType>>();

    TSharedPtr<FTableCache<FUniqueConnectionIdType>> UniqueConnectionIdTable = Data->GetOrAdd(TableName);
    UniqueConnectionIdTable->AddUniqueConstraint<FSpacetimeDBConnectionId>("a", [](const FUniqueConnectionIdType& Row) -> const FSpacetimeDBConnectionId& {
        return Row.A; });

    A = NewObject<UUniqueConnectionIdAUniqueIndex>(this);
    A->SetCache(UniqueConnectionIdTable);

    /***/
}

FTableAppliedDiff<FUniqueConnectionIdType> UUniqueConnectionIdTable::Update(TArray<FWithBsatn<FUniqueConnectionIdType>> InsertsRef, TArray<FWithBsatn<FUniqueConnectionIdType>> DeletesRef)
{
    FTableAppliedDiff<FUniqueConnectionIdType> Diff = BaseUpdate<FUniqueConnectionIdType>(InsertsRef, DeletesRef, Data, TableName);

    return Diff;
}

int32 UUniqueConnectionIdTable::Count() const
{
    return GetRowCountFromTable<FUniqueConnectionIdType>(Data, TableName);
}

TArray<FUniqueConnectionIdType> UUniqueConnectionIdTable::Iter() const
{
    return GetAllRowsFromTable<FUniqueConnectionIdType>(Data, TableName);
}
