// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit 263b33e20d9304f44bf4d598dde892211c5c89e8).

#include "ModuleBindings/Tables/UniqueI8Table.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UUniqueI8Table::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FUniqueI8Type>>();

    TSharedPtr<FTableCache<FUniqueI8Type>> UniqueI8Table = Data->GetOrAdd(TableName);
    UniqueI8Table->AddUniqueConstraint<int8>("n", [](const FUniqueI8Type& Row) -> const int8& {
        return Row.N; });

    N = NewObject<UUniqueI8NUniqueIndex>(this);
    N->SetCache(UniqueI8Table);

    /***/
}

FTableAppliedDiff<FUniqueI8Type> UUniqueI8Table::Update(TArray<FWithBsatn<FUniqueI8Type>> InsertsRef, TArray<FWithBsatn<FUniqueI8Type>> DeletesRef)
{
    FTableAppliedDiff<FUniqueI8Type> Diff = BaseUpdate<FUniqueI8Type>(InsertsRef, DeletesRef, Data, TableName);

    return Diff;
}

int32 UUniqueI8Table::Count() const
{
    return GetRowCountFromTable<FUniqueI8Type>(Data, TableName);
}

TArray<FUniqueI8Type> UUniqueI8Table::Iter() const
{
    return GetAllRowsFromTable<FUniqueI8Type>(Data, TableName);
}
