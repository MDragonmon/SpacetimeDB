// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit aeeb35f0bbce28430aeeb22691976813dd469e1e).

#include "ModuleBindings/Tables/PkU32Table.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UPkU32Table::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FPkU32Type>>();

    TSharedPtr<FTableCache<FPkU32Type>> PkU32Table = Data->GetOrAdd(TableName);
    PkU32Table->AddUniqueConstraint<uint32>("n", [](const FPkU32Type& Row) -> const uint32& {
        return Row.N; });

    N = NewObject<UPkU32NUniqueIndex>(this);
    N->SetCache(PkU32Table);

    /***/
}

FTableAppliedDiff<FPkU32Type> UPkU32Table::Update(TArray<FWithBsatn<FPkU32Type>> InsertsRef, TArray<FWithBsatn<FPkU32Type>> DeletesRef)
{
    FTableAppliedDiff<FPkU32Type> Diff = BaseUpdate<FPkU32Type>(InsertsRef, DeletesRef, Data, TableName);

    Diff.DeriveUpdatesByPrimaryKey<uint32>(
        [](const FPkU32Type& Row) 
        {
            return Row.N; 
        }
    );

    return Diff;
}

int32 UPkU32Table::Count() const
{
    return GetRowCountFromTable<FPkU32Type>(Data, TableName);
}

TArray<FPkU32Type> UPkU32Table::Iter() const
{
    return GetAllRowsFromTable<FPkU32Type>(Data, TableName);
}
