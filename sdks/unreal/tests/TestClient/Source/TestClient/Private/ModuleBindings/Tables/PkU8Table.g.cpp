// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit aeeb35f0bbce28430aeeb22691976813dd469e1e).

#include "ModuleBindings/Tables/PkU8Table.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UPkU8Table::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FPkU8Type>>();

    TSharedPtr<FTableCache<FPkU8Type>> PkU8Table = Data->GetOrAdd(TableName);
    PkU8Table->AddUniqueConstraint<uint8>("n", [](const FPkU8Type& Row) -> const uint8& {
        return Row.N; });

    N = NewObject<UPkU8NUniqueIndex>(this);
    N->SetCache(PkU8Table);

    /***/
}

FTableAppliedDiff<FPkU8Type> UPkU8Table::Update(TArray<FWithBsatn<FPkU8Type>> InsertsRef, TArray<FWithBsatn<FPkU8Type>> DeletesRef)
{
    FTableAppliedDiff<FPkU8Type> Diff = BaseUpdate<FPkU8Type>(InsertsRef, DeletesRef, Data, TableName);

    Diff.DeriveUpdatesByPrimaryKey<uint8>(
        [](const FPkU8Type& Row) 
        {
            return Row.N; 
        }
    );

    return Diff;
}

int32 UPkU8Table::Count() const
{
    return GetRowCountFromTable<FPkU8Type>(Data, TableName);
}

TArray<FPkU8Type> UPkU8Table::Iter() const
{
    return GetAllRowsFromTable<FPkU8Type>(Data, TableName);
}
