// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit 263b33e20d9304f44bf4d598dde892211c5c89e8).

#include "ModuleBindings/Tables/IndexedTableTable.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UIndexedTableTable::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FIndexedTableType>>();

    TSharedPtr<FTableCache<FIndexedTableType>> IndexedTableTable = Data->GetOrAdd(TableName);

    // Register a new multi-key B-Tree index named "player_id" on the IndexedTableTable.
    IndexedTableTable->AddMultiKeyBTreeIndex<TTuple<uint32>>(
        TEXT("player_id"),
        [](const FIndexedTableType& Row)
        {
            // This tuple is stored in the B-Tree index for fast composite key lookups.
            return MakeTuple(Row.PlayerId);
        }
    );

    PlayerId = NewObject<UIndexedTablePlayerIdIndex>(this);
    PlayerId->SetCache(IndexedTableTable);

    /***/
}

FTableAppliedDiff<FIndexedTableType> UIndexedTableTable::Update(TArray<FWithBsatn<FIndexedTableType>> InsertsRef, TArray<FWithBsatn<FIndexedTableType>> DeletesRef)
{
    FTableAppliedDiff<FIndexedTableType> Diff = BaseUpdate<FIndexedTableType>(InsertsRef, DeletesRef, Data, TableName);

    return Diff;
}

int32 UIndexedTableTable::Count() const
{
    return GetRowCountFromTable<FIndexedTableType>(Data, TableName);
}

TArray<FIndexedTableType> UIndexedTableTable::Iter() const
{
    return GetAllRowsFromTable<FIndexedTableType>(Data, TableName);
}
