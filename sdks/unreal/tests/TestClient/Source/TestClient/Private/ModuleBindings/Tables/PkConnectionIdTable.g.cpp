// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit aeeb35f0bbce28430aeeb22691976813dd469e1e).

#include "ModuleBindings/Tables/PkConnectionIdTable.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UPkConnectionIdTable::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FPkConnectionIdType>>();

    TSharedPtr<FTableCache<FPkConnectionIdType>> PkConnectionIdTable = Data->GetOrAdd(TableName);
    PkConnectionIdTable->AddUniqueConstraint<FSpacetimeDBConnectionId>("a", [](const FPkConnectionIdType& Row) -> const FSpacetimeDBConnectionId& {
        return Row.A; });

    A = NewObject<UPkConnectionIdAUniqueIndex>(this);
    A->SetCache(PkConnectionIdTable);

    /***/
}

FTableAppliedDiff<FPkConnectionIdType> UPkConnectionIdTable::Update(TArray<FWithBsatn<FPkConnectionIdType>> InsertsRef, TArray<FWithBsatn<FPkConnectionIdType>> DeletesRef)
{
    FTableAppliedDiff<FPkConnectionIdType> Diff = BaseUpdate<FPkConnectionIdType>(InsertsRef, DeletesRef, Data, TableName);

    Diff.DeriveUpdatesByPrimaryKey<FSpacetimeDBConnectionId>(
        [](const FPkConnectionIdType& Row) 
        {
            return Row.A; 
        }
    );

    return Diff;
}

int32 UPkConnectionIdTable::Count() const
{
    return GetRowCountFromTable<FPkConnectionIdType>(Data, TableName);
}

TArray<FPkConnectionIdType> UPkConnectionIdTable::Iter() const
{
    return GetAllRowsFromTable<FPkConnectionIdType>(Data, TableName);
}
