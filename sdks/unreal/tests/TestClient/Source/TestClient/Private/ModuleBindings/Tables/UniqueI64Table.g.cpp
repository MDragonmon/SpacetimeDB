// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit aeeb35f0bbce28430aeeb22691976813dd469e1e).

#include "ModuleBindings/Tables/UniqueI64Table.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UUniqueI64Table::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FUniqueI64Type>>();

    TSharedPtr<FTableCache<FUniqueI64Type>> UniqueI64Table = Data->GetOrAdd(TableName);
    UniqueI64Table->AddUniqueConstraint<int64>("n", [](const FUniqueI64Type& Row) -> const int64& {
        return Row.N; });

    N = NewObject<UUniqueI64NUniqueIndex>(this);
    N->SetCache(UniqueI64Table);

    /***/
}

FTableAppliedDiff<FUniqueI64Type> UUniqueI64Table::Update(TArray<FWithBsatn<FUniqueI64Type>> InsertsRef, TArray<FWithBsatn<FUniqueI64Type>> DeletesRef)
{
    FTableAppliedDiff<FUniqueI64Type> Diff = BaseUpdate<FUniqueI64Type>(InsertsRef, DeletesRef, Data, TableName);

    return Diff;
}

int32 UUniqueI64Table::Count() const
{
    return GetRowCountFromTable<FUniqueI64Type>(Data, TableName);
}

TArray<FUniqueI64Type> UUniqueI64Table::Iter() const
{
    return GetAllRowsFromTable<FUniqueI64Type>(Data, TableName);
}
