// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit 263b33e20d9304f44bf4d598dde892211c5c89e8).

#include "ModuleBindings/Tables/UniqueI32Table.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UUniqueI32Table::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FUniqueI32Type>>();

    TSharedPtr<FTableCache<FUniqueI32Type>> UniqueI32Table = Data->GetOrAdd(TableName);
    UniqueI32Table->AddUniqueConstraint<int32>("n", [](const FUniqueI32Type& Row) -> const int32& {
        return Row.N; });

    N = NewObject<UUniqueI32NUniqueIndex>(this);
    N->SetCache(UniqueI32Table);

    /***/
}

FTableAppliedDiff<FUniqueI32Type> UUniqueI32Table::Update(TArray<FWithBsatn<FUniqueI32Type>> InsertsRef, TArray<FWithBsatn<FUniqueI32Type>> DeletesRef)
{
    FTableAppliedDiff<FUniqueI32Type> Diff = BaseUpdate<FUniqueI32Type>(InsertsRef, DeletesRef, Data, TableName);

    return Diff;
}

int32 UUniqueI32Table::Count() const
{
    return GetRowCountFromTable<FUniqueI32Type>(Data, TableName);
}

TArray<FUniqueI32Type> UUniqueI32Table::Iter() const
{
    return GetAllRowsFromTable<FUniqueI32Type>(Data, TableName);
}
