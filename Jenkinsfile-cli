import org.jenkinsci.plugins.workflow.steps.FlowInterruptedException

String imageDigest(name) {
  sh(returnStdout: true, script: "docker inspect --format='{{index .RepoDigests 0}}' $name | cut -d':' -f 2").trim()
}

node {
  properties([
    disableConcurrentBuilds(),
    githubProjectProperty(displayName: 'SpacetimeDB', projectUrlStr: 'https://github.com/clockworklabs/SpacetimeDB/'),
  ])

  try {
    stage('Clone Repository') {
      checkout scm
    }

    stage('All Builds') {
      parallel (
        linux: {
          withCredentials([sshUserPrivateKey(credentialsId: "AWS_EC2_INSTANCE_JENKINS_SSH_KEY", keyFileVariable: 'keyfile')]) {
            sh "scp -o StrictHostKeyChecking=accept-new -P 9001 -i '${keyfile}' .jenkins/linux-build.sh jenkins@vpn.partner.spacetimedb.net:linux-build.sh"
            sh "ssh -o StrictHostKeyChecking=accept-new -p 9001 -i '${keyfile}' jenkins@vpn.partner.spacetimedb.net bash linux-build.sh"
            sh "scp -o StrictHostKeyChecking=accept-new -P 9001 -i '${keyfile}' jenkins@vpn.partner.spacetimedb.net:/home/jenkins/SpacetimeDB/target/release/spacetime ./spacetime.linux"
          }
        },
        macos: {
          withCredentials([sshUserPrivateKey(credentialsId: "AWS_EC2_INSTANCE_JENKINS_SSH_KEY", keyFileVariable: 'keyfile')]) {
            sh "scp -o StrictHostKeyChecking=accept-new -P 9002 -i '${keyfile}' .jenkins/macos-build.sh jenkins@vpn.partner.spacetimedb.net:/Users/jenkins/macos-build.sh"
            sh "ssh -o StrictHostKeyChecking=accept-new -p 9002 -i '${keyfile}' jenkins@vpn.partner.spacetimedb.net bash macos-build.sh"
            sh "scp -o StrictHostKeyChecking=accept-new -P 9002 -i '${keyfile}' jenkins@vpn.partner.spacetimedb.net:/Users/jenkins/SpacetimeDB/target/spacetime-universal-apple-darwin-release ./spacetime.macos"
          }
        },
        windows: {
          withCredentials([sshUserPrivateKey(credentialsId: "AWS_EC2_INSTANCE_JENKINS_SSH_KEY", keyFileVariable: 'keyfile')]) {
            sh "scp -o StrictHostKeyChecking=accept-new -P 9003 -i '${keyfile}' .jenkins/windows_build.bat jenkins@vpn.partner.spacetimedb.net:windows_build.bat"
            sh "ssh -o StrictHostKeyChecking=accept-new -p 9003 -i '${keyfile}' jenkins@vpn.partner.spacetimedb.net windows_build"
            sh "scp -o StrictHostKeyChecking=accept-new -P 9003 -i '${keyfile}' jenkins@vpn.partner.spacetimedb.net:C:/Users/jenkins/SpacetimeDB/target/release/spacetime.exe ./spacetime.exe"
          }
        }
      )
    }

    stage('Deploy') {
      withCredentials([sshUserPrivateKey(credentialsId: "AWS_EC2_INSTANCE_JENKINS_SSH_KEY", keyFileVariable: 'keyfile')]) {
        // Pull any changes for SpacetimeInstall 
        sh "ssh -o StrictHostKeyChecking=accept-new -p 9004 -i '${keyfile}' jenkins@vpn.partner.spacetimedb.net git -C /home/jenkins/SpacetimeInstall fetch -a" 
        sh "ssh -o StrictHostKeyChecking=accept-new -p 9004 -i '${keyfile}' jenkins@vpn.partner.spacetimedb.net git -C /home/jenkins/SpacetimeInstall reset --hard origin/master" 

        // Upload executables
        sh "scp -o StrictHostKeyChecking=accept-new -P 9004 -i '${keyfile}' ./spacetime.macos jenkins@vpn.partner.spacetimedb.net:/home/jenkins/SpacetimeInstall/install/spacetime.macos"
        sh "scp -o StrictHostKeyChecking=accept-new -P 9004 -i '${keyfile}' ./spacetime.linux jenkins@vpn.partner.spacetimedb.net:/home/jenkins/SpacetimeInstall/install/spacetime.linux"
        sh "scp -o StrictHostKeyChecking=accept-new -P 9004 -i '${keyfile}' ./spacetime.exe jenkins@vpn.partner.spacetimedb.net:/home/jenkins/SpacetimeInstall/windows/spacetime.exe"

        sh "ssh -o StrictHostKeyChecking=accept-new -p 9004 -i '${keyfile}' jenkins@vpn.partner.spacetimedb.net bash ./SpacetimeInstall/deploy-cli.sh" 
      }
    }
  } catch (FlowInterruptedException interruptEx) {
    currentBuild.result = "ABORTED"
    throw interruptEx;
  } catch (err) {
    currentBuild.result = "FAILURE"
    throw err;
  } finally {
    // print discord message
    // discordSend description: "", link: env.BUILD_URL, result: currentBuild.currentResult, title: "", webhookURL: ""
  }
}
