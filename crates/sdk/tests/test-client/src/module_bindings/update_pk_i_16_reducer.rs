// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused)]
use spacetimedb_sdk::{
    self as __sdk,
    anyhow::{self as __anyhow, Context as _},
    lib as __lib, sats as __sats, ws_messages as __ws,
};

#[derive(__lib::ser::Serialize, __lib::de::Deserialize, Clone, PartialEq, Debug)]
#[sats(crate = __lib)]
pub struct UpdatePkI16 {
    pub n: i16,
    pub data: i32,
}

impl __sdk::spacetime_module::InModule for UpdatePkI16 {
    type Module = super::RemoteModule;
}

pub struct UpdatePkI16CallbackId(__sdk::callbacks::CallbackId);

#[allow(non_camel_case_types)]
pub trait update_pk_i_16 {
    fn update_pk_i_16(&self, n: i16, data: i32) -> __anyhow::Result<()>;
    fn on_update_pk_i_16(
        &self,
        callback: impl FnMut(&super::EventContext, &i16, &i32) + Send + 'static,
    ) -> UpdatePkI16CallbackId;
    fn remove_on_update_pk_i_16(&self, callback: UpdatePkI16CallbackId);
}

impl update_pk_i_16 for super::RemoteReducers {
    fn update_pk_i_16(&self, n: i16, data: i32) -> __anyhow::Result<()> {
        self.imp.call_reducer("update_pk_i16", UpdatePkI16 { n, data })
    }
    fn on_update_pk_i_16(
        &self,
        mut callback: impl FnMut(&super::EventContext, &i16, &i32) + Send + 'static,
    ) -> UpdatePkI16CallbackId {
        UpdatePkI16CallbackId(self.imp.on_reducer::<UpdatePkI16>(
            "update_pk_i16",
            Box::new(move |ctx: &super::EventContext, args: &UpdatePkI16| callback(ctx, &args.n, &args.data)),
        ))
    }
    fn remove_on_update_pk_i_16(&self, callback: UpdatePkI16CallbackId) {
        self.imp.remove_on_reducer::<UpdatePkI16>("update_pk_i16", callback.0)
    }
}
