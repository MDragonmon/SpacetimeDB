// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused)]
use spacetimedb_sdk::{
    self as __sdk,
    anyhow::{self as __anyhow, Context as _},
    lib as __lib, sats as __sats, ws_messages as __ws,
};

use super::every_primitive_struct_type::EveryPrimitiveStruct;

#[derive(__lib::ser::Serialize, __lib::de::Deserialize, Clone, PartialEq, Debug)]
#[sats(crate = __lib)]
pub struct InsertPrimitivesAsStrings {
    pub s: EveryPrimitiveStruct,
}

impl __sdk::spacetime_module::InModule for InsertPrimitivesAsStrings {
    type Module = super::RemoteModule;
}

pub struct InsertPrimitivesAsStringsCallbackId(__sdk::callbacks::CallbackId);

#[allow(non_camel_case_types)]
pub trait insert_primitives_as_strings {
    fn insert_primitives_as_strings(&self, s: EveryPrimitiveStruct) -> __anyhow::Result<()>;
    fn on_insert_primitives_as_strings(
        &self,
        callback: impl FnMut(&super::EventContext, &EveryPrimitiveStruct) + Send + 'static,
    ) -> InsertPrimitivesAsStringsCallbackId;
    fn remove_on_insert_primitives_as_strings(&self, callback: InsertPrimitivesAsStringsCallbackId);
}

impl insert_primitives_as_strings for super::RemoteReducers {
    fn insert_primitives_as_strings(&self, s: EveryPrimitiveStruct) -> __anyhow::Result<()> {
        self.imp
            .call_reducer("insert_primitives_as_strings", InsertPrimitivesAsStrings { s })
    }
    fn on_insert_primitives_as_strings(
        &self,
        mut callback: impl FnMut(&super::EventContext, &EveryPrimitiveStruct) + Send + 'static,
    ) -> InsertPrimitivesAsStringsCallbackId {
        InsertPrimitivesAsStringsCallbackId(self.imp.on_reducer::<InsertPrimitivesAsStrings>(
            "insert_primitives_as_strings",
            Box::new(move |ctx: &super::EventContext, args: &InsertPrimitivesAsStrings| callback(ctx, &args.s)),
        ))
    }
    fn remove_on_insert_primitives_as_strings(&self, callback: InsertPrimitivesAsStringsCallbackId) {
        self.imp
            .remove_on_reducer::<InsertPrimitivesAsStrings>("insert_primitives_as_strings", callback.0)
    }
}
