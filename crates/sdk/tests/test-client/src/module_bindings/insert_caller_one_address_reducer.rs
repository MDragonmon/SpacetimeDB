// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused)]
use spacetimedb_sdk::{
    self as __sdk,
    anyhow::{self as __anyhow, Context as _},
    lib as __lib, sats as __sats, ws_messages as __ws,
};

#[derive(__lib::ser::Serialize, __lib::de::Deserialize, Clone, PartialEq, Debug)]
#[sats(crate = __lib)]
pub struct InsertCallerOneAddress {}

impl __sdk::spacetime_module::InModule for InsertCallerOneAddress {
    type Module = super::RemoteModule;
}

pub struct InsertCallerOneAddressCallbackId(__sdk::callbacks::CallbackId);

#[allow(non_camel_case_types)]
pub trait insert_caller_one_address {
    fn insert_caller_one_address(&self) -> __anyhow::Result<()>;
    fn on_insert_caller_one_address(
        &self,
        callback: impl FnMut(&super::EventContext) + Send + 'static,
    ) -> InsertCallerOneAddressCallbackId;
    fn remove_on_insert_caller_one_address(&self, callback: InsertCallerOneAddressCallbackId);
}

impl insert_caller_one_address for super::RemoteReducers {
    fn insert_caller_one_address(&self) -> __anyhow::Result<()> {
        self.imp
            .call_reducer("insert_caller_one_address", InsertCallerOneAddress {})
    }
    fn on_insert_caller_one_address(
        &self,
        mut callback: impl FnMut(&super::EventContext) + Send + 'static,
    ) -> InsertCallerOneAddressCallbackId {
        InsertCallerOneAddressCallbackId(self.imp.on_reducer::<InsertCallerOneAddress>(
            "insert_caller_one_address",
            Box::new(move |ctx: &super::EventContext, args: &InsertCallerOneAddress| callback(ctx)),
        ))
    }
    fn remove_on_insert_caller_one_address(&self, callback: InsertCallerOneAddressCallbackId) {
        self.imp
            .remove_on_reducer::<InsertCallerOneAddress>("insert_caller_one_address", callback.0)
    }
}
