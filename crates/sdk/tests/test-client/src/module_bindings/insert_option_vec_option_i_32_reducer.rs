// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused)]
use spacetimedb_sdk::{
    self as __sdk,
    anyhow::{self as __anyhow, Context as _},
    lib as __lib, sats as __sats, ws_messages as __ws,
};

#[derive(__lib::ser::Serialize, __lib::de::Deserialize, Clone, PartialEq, Debug)]
#[sats(crate = __lib)]
pub struct InsertOptionVecOptionI32 {
    pub v: Option<Vec<Option<i32>>>,
}

impl __sdk::spacetime_module::InModule for InsertOptionVecOptionI32 {
    type Module = super::RemoteModule;
}

pub struct InsertOptionVecOptionI32CallbackId(__sdk::callbacks::CallbackId);

#[allow(non_camel_case_types)]
pub trait insert_option_vec_option_i_32 {
    fn insert_option_vec_option_i_32(&self, v: Option<Vec<Option<i32>>>) -> __anyhow::Result<()>;
    fn on_insert_option_vec_option_i_32(
        &self,
        callback: impl FnMut(&super::EventContext, &Option<Vec<Option<i32>>>) + Send + 'static,
    ) -> InsertOptionVecOptionI32CallbackId;
    fn remove_on_insert_option_vec_option_i_32(&self, callback: InsertOptionVecOptionI32CallbackId);
}

impl insert_option_vec_option_i_32 for super::RemoteReducers {
    fn insert_option_vec_option_i_32(&self, v: Option<Vec<Option<i32>>>) -> __anyhow::Result<()> {
        self.imp
            .call_reducer("insert_option_vec_option_i32", InsertOptionVecOptionI32 { v })
    }
    fn on_insert_option_vec_option_i_32(
        &self,
        mut callback: impl FnMut(&super::EventContext, &Option<Vec<Option<i32>>>) + Send + 'static,
    ) -> InsertOptionVecOptionI32CallbackId {
        InsertOptionVecOptionI32CallbackId(self.imp.on_reducer::<InsertOptionVecOptionI32>(
            "insert_option_vec_option_i32",
            Box::new(move |ctx: &super::EventContext, args: &InsertOptionVecOptionI32| callback(ctx, &args.v)),
        ))
    }
    fn remove_on_insert_option_vec_option_i_32(&self, callback: InsertOptionVecOptionI32CallbackId) {
        self.imp
            .remove_on_reducer::<InsertOptionVecOptionI32>("insert_option_vec_option_i32", callback.0)
    }
}
