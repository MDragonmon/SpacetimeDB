// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

// <auto-generated />

#nullable enable

using System;
using SpacetimeDB.BSATN;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteTables
    {
        public sealed class EntityHandle : RemoteTableHandle<EventContext, Entity>
        {
            public override void InternalInvokeValueInserted(IStructuralReadWrite row)
            {
                var value = (Entity)row;
                EntityId.Cache[value.EntityId] = value;
            }

            public override void InternalInvokeValueDeleted(IStructuralReadWrite row)
            {
                EntityId.Cache.Remove(((Entity)row).EntityId);
            }

            public sealed class EntityIdUniqueIndex
            {
                internal readonly Dictionary<uint, Entity> Cache = new(16);

                public Entity? Find(uint value)
                {
                    Cache.TryGetValue(value, out var r);
                    return r;
                }
            }

            public EntityIdUniqueIndex EntityId = new();

            internal EntityHandle()
            {
            }

            public override object GetPrimaryKey(IStructuralReadWrite row) => ((Entity)row).EntityId;
        }

        public readonly EntityHandle Entity = new();
    }
}
